{"version":3,"sources":["components/commons/navbar.jsx","services/appService.jsx","components/pages/showAllForms.jsx","components/reuseable/optionInputs.jsx","components/reuseable/optionManager.jsx","components/reuseable/formElementForCreating.jsx","components/pages/formCreater.jsx","components/reuseable/mapElements/lib/arePathsEqual.js","components/reuseable/mapElements/Polygon.js","components/reuseable/mapElements/lib/String.js","components/reuseable/mapComponent.jsx","components/pages/showSpeceficForm.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","collapsed","toggleCollapsed","isNavbarButtonClicked","props","setState","smallView","style","float","direc","width","backgroundColor","defaultSelectedKeys","defaultOpenKeys","mode","theme","textAlign","inlineCollapsed","Item","key","to","color","type","marginRight","checkedChildren","unCheckedChildren","marginTop","marginLeft","display","onChange","onDirectChange","checked","BigView","height","onClick","this","smallSize","React","Component","appService","url","getAllForms","axios","get","getSpeceficFormById","id","postNewForm","newForm","post","postComplitedFormByClient","ComplitedForm","ShowAllForms","columns","data","headerFixer","title","dataIndex","align","render","text","record","handleShow","then","res","forms","sort","a","b","number","dataSource","bordered","tableLayout","size","history","push","OptionInputs","idx","optionState","handleoptionChange","optionId","valueId","valueText","htmlFor","className","name","data-idx","value","label","OptionManager","temp","blankoption","age","intitialVal","useState","setoptionState","e","updatedoptions","target","dataset","onChangeOptions","marginBottom","map","val","Option","Select","FormElementForCreating","hasOption","handleChangeType","obj","handleChangeName","handleChangeTitle","handleChangeRequired","onChangeHasOption","handleChangeHasOption","handleChangeOptions","generateOptions","field","hasOptions","options","margin","padding","handleDelete","placeholder","defaultValue","required","FormCreater","Elements","lastId","submitForm","checkingResult","errorDiscribtion","st","console","log","length","i","checkopt","opt","j","objectToSend","fields","x","service","catch","error","notification","success","message","description","placement","stateFixerFunc","handleAdd","filter","find","handleChangeMainTitle","element","el","isValidLatLng","elem","hasOwnProperty","evtNames","window","onload","Polygon","polygonPromise","wrappedPromise","promise","Promise","resolve","reject","bind","renderPolygon","prevProps","pathA","pathB","Array","isArray","lat","lng","arePathsEqual","paths","polygon","setMap","google","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","params","maps","forEach","addListener","handleEvent","evt","evtName","split","word","charAt","toUpperCase","slice","join","propTypes","PropTypes","func","defaultProps","MapComponent","clickHandler","marker","newPoints","points","latLng","pointId","itemId","onMarkerClick","position","index","findIndex","splice","drawPolygon","zoom","initialCenter","GoogleApiWrapper","apiKey","ShowSpeceficForm","firstTimeForSetState","form","ElementValues","formBuilder","jsxElementArray","SelectOptionOnChangeHandeler","inputOnChangeHandeler","Value","inputNumberOnChangeHandeler","direction","DatePickerOnChangeHandeler","LocationOnClickHandeler","intialStateBuilder","getAttribute","_d","checker","formatOutput","tempRes","elementName","answer","match","App","formCreaterState","span","path","formCreaterStateFixHandeler","directHandler","navbarButtonResizeViewClickHandler","zIndex","addEventListener","resize","resizeRes","innerWidth","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78b8419c.chunk.js","sourcesContent":["// export default NavBar;\nimport { Menu, Icon, Button, Switch } from \"antd\";\nimport React from \"react\";\nimport Sticky from \"react-sticky-el\";\nimport { Link } from \"react-router-dom\";\n\nclass NavBar extends React.Component {\n  state = {\n    collapsed: false\n  };\n\n  toggleCollapsed = () => {\n    const { isNavbarButtonClicked } = this.props;\n    isNavbarButtonClicked();\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n\n  render() {\n    const { smallSize } = this.props;\n    if (smallSize === \"true\") {\n      return this.smallView();\n    } else {\n      return this.BigView();\n    }\n  }\n  smallView = () => {\n    return (\n      <Sticky>\n        <div\n          style={{\n            float: this.props.direc === \"rtl\" ? \"right\" : \"left\",\n            width: \"100%\",\n            backgroundColor: \"#001529\"\n          }}\n        >\n          <Menu\n            defaultSelectedKeys={[\"1\"]}\n            defaultOpenKeys={[\"sub1\"]}\n            mode=\"horizontal\"\n            theme=\"dark\"\n            style={{\n              textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\n            }}\n            inlineCollapsed={this.state.collapsed}\n          >\n            <Menu.Item key=\"1\">\n              <Link to=\"/ShowAllForms\" style={{ color: \"white\" }}>\n                <Icon type=\"desktop\" />\n                <span style={{ marginRight: \"3px\" }}>\n                  {this.props.direc === \"rtl\" ? \"مشاهده\" : \"Show\"}\n                </span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Link to=\"/FormCreater\" style={{ color: \"white\" }}>\n                <Icon type=\"form\" />\n                <span style={{ marginRight: \"3px\" }}>\n                  {this.props.direc === \"rtl\" ? \"فرم ساخت\" : \"Creating Form\"}\n                </span>\n              </Link>\n            </Menu.Item>\n\n            <Switch\n              checkedChildren=\"Fa\"\n              unCheckedChildren=\"En\"\n              style={{\n                float: this.props.direc === \"rtl\" ? \"left\" : \"right\",\n                marginTop: \"10px\",\n                marginLeft: \"20px\",\n                marginRight: \"20px\",\n                display: \"block\"\n              }}\n              onChange={this.props.onDirectChange}\n              checked={this.props.direc === \"rtl\" ? true : false}\n            />\n          </Menu>\n        </div>\n      </Sticky>\n    );\n  };\n  BigView = () => {\n    return (\n      <Sticky>\n        <div\n          style={{\n            float: this.props.direc === \"rtl\" ? \"right\" : \"left\",\n            width: \"100%\",\n            height: \"100vh\"\n          }}\n        >\n          <Menu\n            defaultSelectedKeys={[\"1\"]}\n            defaultOpenKeys={[\"sub1\"]}\n            mode=\"inline\"\n            theme=\"dark\"\n            style={{\n              height: \"100%\",\n              textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\n            }}\n            inlineCollapsed={this.state.collapsed}\n          >\n            <Button\n              type=\"primary\"\n              onClick={this.toggleCollapsed}\n              style={{\n                marginTop: \"2%\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                display: \"block\"\n              }}\n            >\n              <Icon type={this.state.collapsed ? \"menu-unfold\" : \"menu-fold\"} />\n            </Button>\n\n            <Menu.Item key=\"1\">\n              <Link to=\"/ShowAllForms\" style={{ color: \"white\" }}>\n                <Icon type=\"desktop\" />\n                <span style={{ marginRight: \"3px\" }}>\n                  {this.props.direc === \"rtl\" ? \"مشاهده\" : \"Show\"}\n                </span>\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <Link to=\"/FormCreater\" style={{ color: \"white\" }}>\n                <Icon type=\"form\" />\n                <span style={{ marginRight: \"3px\" }}>\n                  {this.props.direc === \"rtl\" ? \"فرم ساخت\" : \"Creating Form\"}\n                </span>\n              </Link>\n            </Menu.Item>\n\n            <Switch\n              checkedChildren=\"Fa\"\n              unCheckedChildren=\"En\"\n              style={{\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                display: \"block\"\n              }}\n              onChange={this.props.onDirectChange}\n              checked={this.props.direc === \"rtl\" ? true : false}\n            />\n          </Menu>\n        </div>\n      </Sticky>\n    );\n  };\n}\n\nexport default NavBar;\n","import axios from \"axios\";\r\nclass appService {\r\n  //url = \"http://localhost:5000\";\r\n  url = \"http://hw2-ie-back-master.herokuapp.com\";\r\n\r\n  getAllForms = () => {\r\n    return axios.get(this.url + \"/api/forms\");\r\n  };\r\n  getSpeceficFormById = id => {\r\n    return axios.get(this.url + \"/api/forms/\" + id);\r\n  };\r\n  postNewForm = newForm => {\r\n    return axios.post(this.url + \"/api/forms\", newForm);\r\n  };\r\n  postComplitedFormByClient = (ComplitedForm, id) => {\r\n    return axios.post(this.url + \"/api/forms/\" + id, ComplitedForm);\r\n  };\r\n}\r\n\r\nexport default appService;\r\n//https://hw2-ie-front-master.herokuapp.com/ | https://git.heroku.com/hw2-ie-front-master.git\r\n","import { Table, Button } from \"antd\";\nimport React from \"react\";\nimport appService from \"../../services/appService\";\nclass ShowAllForms extends React.Component {\n  columns = [];\n  state = {\n    data: []\n  };\n  // data = [\n  //   {\n  //     key: \"1\",\n  //     name: \"فرم ثبت نام دانشجو\",\n  //     number: 1\n  //   },\n  //   {\n  //     key: \"2\",\n  //     name: \"فرم انتخاب واحد\",\n  //     number: 2\n  //   },\n  //   {\n  //     key: \"3\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 3\n  //   },\n  //   {\n  //     key: \"4\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 4\n  //   },\n  //   {\n  //     key: \"5\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 5\n  //   },\n  //   {\n  //     key: \"6\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 6\n  //   },\n  //   {\n  //     key: \"7\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 7\n  //   },\n  //   {\n  //     key: \"8\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 8\n  //   },\n  //   {\n  //     key: \"9\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 9\n  //   },\n  //   {\n  //     key: \"10\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 10\n  //   },\n  //   {\n  //     key: \"11\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 11\n  //   },\n  //   {\n  //     key: \"12\",\n  //     name: \"فرم حذف و اضافه\",\n  //     number: 12\n  //   }\n  // ];\n  componentDidMount() {\n    const service = new appService();\n    service.getAllForms().then(res => {\n      let data = res.data.forms.sort((a, b) => {\n        if (a.number < b.number) {\n          return 1;\n        }\n        if (a.number > b.number) {\n          return -1;\n        }\n        return 0;\n      });\n      this.setState({ data: data });\n    });\n    // console.log(\"ssd\", res.data.forms)\n    // console.log(\"ssd\", this.state);\n  }\n\n  headerFixer = () => {\n    this.columns = [\n      {\n        title: (\n          <span style={{ color: \"#006bd7\" }}>\n            {this.props.direc === \"rtl\" ? \"شماره فرم\" : \"form number\"}\n          </span>\n        ),\n        dataIndex: \"number\",\n        key: \"number\",\n        width: \"15%\",\n        align: \"center\",\n\n        render: text => <span style={{ color: \"#001529\" }}>{text}</span>\n      },\n      {\n        title: (\n          <span style={{ color: \"#006bd7\" }}>\n            {this.props.direc === \"rtl\" ? \"نام فرم\" : \"form name\"}\n          </span>\n        ),\n        dataIndex: \"name\",\n        key: \"name\",\n        width: \"70%\",\n        align: \"center\",\n        render: text => <span style={{ color: \"#001529\" }}>{text}</span>\n      },\n      {\n        title: (\n          <span style={{ color: \"#006bd7\" }}>\n            {this.props.direc === \"rtl\" ? \"عملیات\" : \"َAction\"}\n          </span>\n        ),\n        width: \"15%\",\n        align: \"center\",\n        key: \"action\",\n        render: (text, record) => (\n          <span>\n            <Button type=\"primary\" onClick={() => this.handleShow(record.key)}>\n              {this.props.direc === \"rtl\" ? \"پر کردن\" : \"filling the form\"}\n            </Button>\n          </span>\n        )\n      }\n    ];\n  };\n\n  render() {\n    this.headerFixer();\n    return (\n      <div\n        style={{\n          textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\n        }}\n      >\n        <h3 style={{ color: \"white\", marginRight: \"3px\", marginLeft: \"3px\" }}>\n          {this.props.direc === \"rtl\"\n            ? \"مشاهده تمام فرم های ساخته شده\"\n            : \"Showing all created form\"}\n        </h3>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          style={{\n            backgroundColor: \"white\"\n          }}\n          bordered=\"true\"\n          tableLayout=\"auto\"\n          size=\"middle\"\n        />\n      </div>\n    );\n    // return <Table columns={this.columns} dataSource={this.data} />;\n  }\n  handleShow(id) {\n    this.props.history.push(\"/ShowSpeceficForm/\" + id);\n  }\n}\n\nexport default ShowAllForms;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Input } from \"antd\";\r\n\r\nconst OptionInputs = ({ direc, idx, optionState, handleoptionChange }) => {\r\n  const optionId = `name-${idx}`;\r\n  const valueId = `value-${idx}`;\r\n  const valueText = direc === \"rtl\" ? \"مقدار\" : \"value\";\r\n  return (\r\n    <div key={`${valueText}-${idx}`}>\r\n      <label htmlFor={valueId}>{direc === \"rtl\" ? \"برچسب\" : \"lable\"}</label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"value\"\r\n        name={valueId}\r\n        data-idx={idx}\r\n        id={valueId}\r\n        value={optionState[idx].value}\r\n        onChange={handleoptionChange}\r\n        style={{ display: \"inline\", width: \"30%\" }}\r\n      />\r\n      <label htmlFor={optionId}>{`${valueText} #${idx + 1}`}</label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"label\"\r\n        name={optionId}\r\n        data-idx={idx}\r\n        id={optionId}\r\n        value={optionState[idx].label}\r\n        onChange={handleoptionChange}\r\n        style={{ display: \"inline\", width: \"40%\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nOptionInputs.propTypes = {\r\n  idx: PropTypes.number,\r\n  optionState: PropTypes.array,\r\n  handleoptionChange: PropTypes.func\r\n};\r\n\r\nexport default OptionInputs;\r\n","import React, { useState } from \"react\";\r\nimport OptionInputs from \"./optionInputs\";\r\nimport { Button, Input } from \"antd\";\r\n\r\nconst OptionManager = props => {\r\n  const blankoption = { name: \"\", age: \"\" };\r\n  let temp;\r\n\r\n  if (props.intitialVal) {\r\n    temp = props.intitialVal;\r\n  } else {\r\n    temp = blankoption;\r\n  }\r\n  const [optionState, setoptionState] = useState([{ ...temp }]);\r\n  const addoption = () => {\r\n    setoptionState([...optionState, { ...blankoption }]);\r\n  };\r\n\r\n  const handleoptionChange = e => {\r\n    const updatedoptions = [...optionState];\r\n    updatedoptions[e.target.dataset.idx][e.target.className] = e.target.value;\r\n    setoptionState(updatedoptions);\r\n    props.onChangeOptions(updatedoptions);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={addoption}\r\n        style={{\r\n          marginLeft: \"10px\",\r\n          marginRight: \"10px\",\r\n          marginBottom: \"10px\"\r\n        }}\r\n      >\r\n        {props.direc === \"rtl\" ? \"اضافه کردن\" : \"Add\"}\r\n      </Button>\r\n      {optionState.map((val, idx) => (\r\n        <OptionInputs\r\n          key={`option-${idx}`}\r\n          idx={idx}\r\n          optionState={optionState}\r\n          direc={props.direc}\r\n          handleoptionChange={handleoptionChange}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionManager;\r\n","import React, { Component } from \"react\";\r\nimport { InputNumber, Input, Button, Select, Checkbox } from \"antd\";\r\nimport OptionManager from \"./optionManager\";\r\nconst { Option } = Select;\r\nclass FormElementForCreating extends Component {\r\n  state = {\r\n    hasOption: 0\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.props.obj.field.type);\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"white\",\r\n          margin: \"20px\",\r\n          padding: 10\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={() => this.props.handleDelete(this.props.obj.id)}\r\n          type=\"danger\"\r\n        >\r\n          {this.props.direc === \"rtl\" ? \"حذف\" : \"Delete\"}\r\n        </Button>\r\n        <div style={{ margin: 15 }}>\r\n          <h5>{this.props.direc === \"rtl\" ? \"نوع آیتم\" : \"item type\"}</h5>\r\n          <Select\r\n            style={{ width: \"150px\" }}\r\n            placeholder=\"نوع آیتم\"\r\n            defaultValue={this.props.obj.field.type}\r\n            onChange={this.handleChangeType}\r\n          >\r\n            <Option value=\"Text\">\r\n              {this.props.direc === \"rtl\" ? \"ورودی نوشتن\" : \"Text\"}\r\n            </Option>\r\n            <Option value=\"Number\">\r\n              {this.props.direc === \"rtl\" ? \"ورودی عدد\" : \"Number\"}\r\n            </Option>\r\n            <Option value=\"Date\">\r\n              {this.props.direc === \"rtl\" ? \"ورودی تاریخ\" : \"Date\"}\r\n            </Option>\r\n            <Option value=\"Location\">\r\n              {this.props.direc === \"rtl\" ? \"ورودی مکان\" : \"Location\"}\r\n            </Option>\r\n          </Select>\r\n        </div>\r\n        <div style={{ width: \"80%\", margin: 15 }}>\r\n          <h5>\r\n            {this.props.direc === \"rtl\"\r\n              ? \"نام آیتم جهت ذخیره در برنامه\"\r\n              : \"item name for saving in app\"}\r\n          </h5>\r\n          <Input\r\n            value={this.props.obj.field.name}\r\n            onChange={this.handleChangeName}\r\n          />\r\n        </div>\r\n        <div style={{ width: \"80%\", margin: 15 }}>\r\n          <h5>\r\n            {this.props.direc === \"rtl\"\r\n              ? \"نام نمایشی آیتم\"\r\n              : \"item name for showing\"}\r\n          </h5>\r\n          <Input\r\n            value={this.props.obj.field.title}\r\n            onChange={this.handleChangeTitle}\r\n          />\r\n        </div>\r\n        <div style={{ margin: 15 }}>\r\n          <h5>{this.props.direc === \"rtl\" ? \"اجباری بودن\" : \"is mandetory\"}</h5>\r\n          <Select\r\n            placeholder={\r\n              this.props.direc === \"rtl\" ? \"اجباری بودن\" : \"is mandetory\"\r\n            }\r\n            style={{ width: \"100px\" }}\r\n            defaultValue={this.props.obj.field.required}\r\n            onChange={this.handleChangeRequired}\r\n          >\r\n            <Option value=\"true\">\r\n              {this.props.direc === \"rtl\" ? \"بله\" : \"Yes\"}\r\n            </Option>\r\n            <Option value=\"false\">\r\n              {this.props.direc === \"rtl\" ? \"خیر\" : \"No\"}\r\n            </Option>\r\n          </Select>\r\n        </div>\r\n        <div style={{ margin: 15 }}>\r\n          <h5>\r\n            {this.props.direc === \"rtl\" ? \"داری آپشن هست؟\" : \"has option\"}\r\n            <Checkbox\r\n              checked={this.props.obj.field.hasOptions}\r\n              onChange={this.onChangeHasOption}\r\n              style={{ marginLeft: 15, marginRight: 15 }}\r\n            ></Checkbox>\r\n            {/* <InputNumber\r\n              value={this.state.hasOption}\r\n              onChange={this.onChangeHasOption}\r\n              min={0}\r\n              max={10}\r\n              defaultValue={0}\r\n              style={{ marginLeft: 15, marginRight: 15, width: 100 }}\r\n            /> */}\r\n          </h5>\r\n\r\n          {this.generateOptions()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleChangeType = e => {\r\n    this.props.handleChangeType(e, this.props.obj.id);\r\n  };\r\n  handleChangeName = e => {\r\n    this.props.handleChangeName(e, this.props.obj.id);\r\n  };\r\n  handleChangeTitle = e => {\r\n    this.props.handleChangeTitle(e, this.props.obj.id);\r\n  };\r\n  handleChangeRequired = e => {\r\n    this.props.handleChangeRequired(e, this.props.obj.id);\r\n  };\r\n\r\n  onChangeHasOption = value => {\r\n    this.setState({ hasOption: value.target.checked });\r\n    this.props.handleChangeHasOption(value.target.checked, this.props.obj.id);\r\n  };\r\n  onChangeOptions = value => {\r\n    // console.log(\"gg\", value);\r\n    this.props.handleChangeOptions(value, this.props.obj.id);\r\n  };\r\n  generateOptions = () => {\r\n    if (this.props.obj.field.hasOptions) {\r\n      return (\r\n        <OptionManager\r\n          direc={this.props.direc}\r\n          onChangeOptions={this.onChangeOptions}\r\n          intitialVal={this.props.obj.field.options}\r\n        ></OptionManager>\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport default FormElementForCreating;\r\n","import React, { Component } from \"react\";\nimport FormElementForCreating from \"../reuseable/formElementForCreating\";\nimport { Button, notification, Input } from \"antd\";\nimport appService from \"../../services/appService\";\nclass FormCreater extends Component {\n  state = {\n    title: \"Form\",\n    Elements: [],\n    lastId: 0\n  };\n\n  render() {\n    const { Elements, lastId } = this.props.st;\n\n    console.log(Elements);\n    return (\n      <div\n        style={{\n          textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\n        }}\n      >\n        <h3 style={{ color: \"white\", marginRight: \"20px\", marginLeft: \"20px\" }}>\n          {this.props.direc === \"rtl\" ? \"ساخت فرم جدید\" : \"Creating new form\"}\n        </h3>\n        <Input\n          value={this.props.st.title}\n          onChange={this.handleChangeMainTitle}\n          style={{ width: \"25%\", marginLeft: 20, marginRight: 20 }}\n        />\n\n        <Button\n          onClick={this.submitForm}\n          style={{\n            marginBottom: 16,\n            marginLeft: 10,\n            marginRight: 10,\n            backgroundColor: \"lightgreen\",\n            float: this.props.direc === \"rtl\" ? \"left\" : \"right\"\n          }}\n        >\n          {this.props.direc === \"rtl\" ? \"ساخت فرم\" : \"Creating form\"}\n        </Button>\n        <Button\n          onClick={this.handleAdd}\n          style={{\n            marginBottom: 16,\n            backgroundColor: \"yellow\",\n            float: this.props.direc === \"rtl\" ? \"left\" : \"right\"\n          }}\n        >\n          {this.props.direc === \"rtl\"\n            ? \"اضافه کردن سطر جدید\"\n            : \"Adding new row\"}\n        </Button>\n        {Elements.map(el => (\n          <FormElementForCreating\n            key={el.id}\n            obj={el}\n            direc={this.props.direc}\n            handleChangeType={this.handleChangeType}\n            handleChangeName={this.handleChangeName}\n            handleChangeTitle={this.handleChangeTitle}\n            handleChangeRequired={this.handleChangeRequired}\n            handleDelete={this.handleDelete}\n            handleChangeHasOption={this.handleChangeHasOption}\n            handleChangeOptions={this.handleChangeOptions}\n          ></FormElementForCreating>\n        ))}\n      </div>\n    );\n  }\n  submitForm = () => {\n    let checkingResult = true;\n    let errorDiscribtion = \"\";\n\n    const { title, Elements } = this.props.st;\n    console.log(Elements);\n    if (Elements.length > 0) {\n      if (title && title.length > 0) {\n        for (let i = 0; i < Elements.length; i++) {\n          if (!(Elements[i].field.name && Elements[i].field.title)) {\n            errorDiscribtion =\n              this.props.direc === \"rtl\"\n                ? \"نام آیتم یا نام قابل نمایش آن پر نشده در سطر \" + (i + 1)\n                : \"item name or title is empty in row\" + (i + 1);\n            checkingResult = false;\n            break;\n          }\n          if (Elements[i].field.hasOptions) {\n            // console.log(\"kk\", Elements[i].field);\n            if (Elements[i].field.options) {\n              let checkopt = true;\n              let opt = Elements[i].field.options;\n              for (let j = 0; j < opt.length; j++) {\n                if (!(opt[j].label && opt[j].value)) {\n                  checkopt = false;\n                  break;\n                }\n              }\n              if (!checkopt) {\n                errorDiscribtion =\n                  this.props.direc === \"rtl\"\n                    ? \"آپشنی پرنشده است برای سطر \" + (i + 1)\n                    : \"an option is empty in row\" + (i + 1);\n                checkingResult = false;\n                break;\n              }\n            } else {\n              errorDiscribtion =\n                this.props.direc === \"rtl\"\n                  ? \"حداقل یک آپشن پر شود در سطر \" + (i + 1)\n                  : \"an option is needed in row\" + (i + 1);\n              checkingResult = false;\n              break;\n            }\n          }\n        }\n      } else {\n        errorDiscribtion =\n          this.props.direc === \"rtl\" ? \"نام فرم پر نشده\" : \"form name is empty\";\n        checkingResult = false;\n      }\n    } else {\n      errorDiscribtion =\n        this.props.direc === \"rtl\"\n          ? \"فرم فاقد آیتم هست\"\n          : \"form dose not have any items\";\n      checkingResult = false;\n    }\n    const arrayElementsFixer = Elements.map(x => ({\n      name: x.field.name,\n      title: x.field.title,\n      type: x.field.type,\n      required: x.field.required,\n      hasOptions: x.field.hasOptions,\n      options: x.field.options\n    }));\n    // console.log(arrayElementsFixer);\n    const objectToSend = {\n      title: title,\n      fields: arrayElementsFixer\n    };\n    //do api call and  change checkingResult if need be\n    const service = new appService();\n    if (checkingResult) {\n      service\n        .postNewForm(objectToSend)\n        .then(res => (checkingResult = true))\n        // .catch(console.log(\"sdff\"));\n        .catch(error => (checkingResult = false));\n    }\n    if (checkingResult) {\n      notification.success({\n        message: this.props.direc === \"rtl\" ? \"عملیات انجام شد\" : \"Success\",\n        description:\n          this.props.direc === \"rtl\"\n            ? \"ساخت فرم با موفقیت انجام گرفت\"\n            : \"Creating Form is Complited\",\n        placement: this.props.direc === \"rtl\" ? \"bottomLeft\" : \"bottomRight\",\n        onClick: () => {\n          console.log(\"Notification Clicked!\");\n        }\n      });\n      this.props.stateFixerFunc({\n        title: \"Form\",\n        Elements: [],\n        lastId: 0\n      });\n    } else {\n      notification.error({\n        message: this.props.direc === \"rtl\" ? \"عملیات انجام نشد\" : \"Faild\",\n        description: errorDiscribtion,\n        placement: this.props.direc === \"rtl\" ? \"bottomLeft\" : \"bottomRight\",\n        onClick: () => {\n          console.log(\"Notification Clicked!\");\n        }\n      });\n    }\n  };\n  handleAdd = () => {\n    // console.log(this.props.st.lastId);\n    // console.log(this.props.st.lastId);\n    // let lastId = this.props.st.lastId++;\n    var Elements = [\n      ...this.props.st.Elements,\n      {\n        id: this.props.st.lastId,\n        field: {\n          name: \"\",\n          title: \"\",\n          type: \"Text\",\n          required: \"false\",\n          hasOptions: false\n        }\n      }\n    ];\n    let lastId = this.props.st.lastId + 1;\n    this.props.stateFixerFunc({\n      title: this.props.st.title,\n      Elements: Elements,\n      lastId: lastId\n    });\n  };\n\n  handleDelete = id => {\n    var Elements = this.props.st.Elements.filter(x => x.id !== id);\n    this.props.stateFixerFunc({\n      title: this.props.st.title,\n      Elements: Elements,\n      lastId: this.props.st.lastId\n    });\n  };\n  handleChangeType = (e, id) => {\n    var Elements = [...this.props.st.Elements];\n    console.log(Elements);\n    const element = Elements.find(x => x.id === id);\n    element.field.type = e;\n    this.props.stateFixerFunc({\n      title: this.props.st.title,\n      Elements: Elements,\n      lastId: this.props.st.lastId\n    });\n  };\n  handleChangeName = (e, id) => {\n    var Elements = [...this.props.st.Elements];\n    const element = Elements.find(x => x.id === id);\n    element.field.name = e.target.value;\n    this.props.stateFixerFunc({\n      title: this.props.st.title,\n      Elements: Elements,\n      lastId: this.props.st.lastId\n    });\n  };\n  handleChangeTitle = (e, id) => {\n    var Elements = [...this.props.st.Elements];\n    const element = Elements.find(x => x.id === id);\n    element.field.title = e.target.value;\n    this.props.stateFixerFunc({\n      title: this.props.st.title,\n      Elements: Elements,\n      lastId: this.props.st.lastId\n    });\n  };\n  handleChangeRequired = (e, id) => {\n    var Elements = [...this.props.st.Elements];\n    const element = Elements.find(x => x.id === id);\n    element.field.required = e;\n    this.props.stateFixerFunc({\n      title: this.props.st.title,\n      Elements: Elements,\n      lastId: this.props.st.lastId\n    });\n  };\n  handleChangeMainTitle = e => {\n    // console.log(e.target.value);\n    this.props.stateFixerFunc({\n      title: e.target.value,\n      Elements: this.props.st.Elements,\n      lastId: this.props.st.lastId\n    });\n  };\n  handleChangeHasOption = (e, id) => {\n    var Elements = [...this.props.st.Elements];\n    const element = Elements.find(x => x.id === id);\n    element.field.hasOptions = e;\n    this.props.stateFixerFunc({\n      title: this.props.st.title,\n      Elements: Elements,\n      lastId: this.props.st.lastId\n    });\n  };\n  handleChangeOptions = (e, id) => {\n    console.log(\"e\", e);\n    var Elements = [...this.props.st.Elements];\n    const element = Elements.find(x => x.id === id);\n    console.log(\"el\", element);\n    element.field.options = e;\n    this.props.stateFixerFunc({\n      title: this.props.st.title,\n      Elements: Elements,\n      lastId: this.props.st.lastId\n    });\n  };\n}\n\nexport default FormCreater;\n","/**\n * Compares two path arrays of LatLng objects.\n */\n\nexport const arePathsEqual = function(pathA, pathB) {\n  if (pathA === pathB) {\n    return true;\n  }\n  if (!Array.isArray(pathA) || !Array.isArray(pathB)) {\n    return false;\n  }\n  if (pathA.length !== pathB.length) {\n    return false;\n  }\n  for (let i = 0; i < pathA.length; ++i) {\n    if (pathA[i] === pathB[i]) {\n      continue;\n    }\n    if (\n      !isValidLatLng(pathA[i]) ||\n      !isValidLatLng(pathB[i])\n    ) {\n      return false;\n    }\n    if (\n      pathB[i].lat !== pathA[i].lat ||\n      pathB[i].lng !== pathA[i].lng\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Helper that checks whether an array consists of objects\n * with lat and lng properties\n * @param {object} elem the element to check\n * @returns {boolean} whether or not it's valid\n */\nconst isValidLatLng = function(elem) {\n  return (\n    elem !== null &&\n    typeof elem === 'object' &&\n    elem.hasOwnProperty('lat') &&\n    elem.hasOwnProperty('lng')\n  );\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { arePathsEqual } from \"./lib/arePathsEqual\";\r\nimport { camelize } from \"./lib/String\";\r\n// const evtNames = [\"click\", \"mouseout\", \"mouseover\"];\r\nconst evtNames = [];\r\nwindow.onload = function() {\r\n  evtNames = [\"click\", \"mouseout\", \"mouseover\"];\r\n};\r\nconst wrappedPromise = function() {\r\n  var wrappedPromise = {},\r\n    promise = new Promise(function(resolve, reject) {\r\n      wrappedPromise.resolve = resolve;\r\n      wrappedPromise.reject = reject;\r\n    });\r\n  wrappedPromise.then = promise.then.bind(promise);\r\n  wrappedPromise.catch = promise.catch.bind(promise);\r\n  wrappedPromise.promise = promise;\r\n\r\n  return wrappedPromise;\r\n};\r\n\r\nexport class Polygon extends React.Component {\r\n  componentDidMount() {\r\n    this.polygonPromise = wrappedPromise();\r\n    this.renderPolygon();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.map !== prevProps.map ||\r\n      !arePathsEqual(this.props.paths, prevProps.paths)\r\n    ) {\r\n      if (this.polygon) {\r\n        this.polygon.setMap(null);\r\n      }\r\n      this.renderPolygon();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.polygon) {\r\n      this.polygon.setMap(null);\r\n    }\r\n  }\r\n\r\n  renderPolygon() {\r\n    const {\r\n      map,\r\n      google,\r\n      paths,\r\n      strokeColor,\r\n      strokeOpacity,\r\n      strokeWeight,\r\n      fillColor,\r\n      fillOpacity,\r\n      ...props\r\n    } = this.props;\r\n\r\n    if (!google) {\r\n      return null;\r\n    }\r\n\r\n    const params = {\r\n      map,\r\n      paths,\r\n      strokeColor,\r\n      strokeOpacity,\r\n      strokeWeight,\r\n      fillColor,\r\n      fillOpacity,\r\n      ...props\r\n    };\r\n\r\n    this.polygon = new google.maps.Polygon(params);\r\n\r\n    evtNames.forEach(e => {\r\n      this.polygon.addListener(e, this.handleEvent(e));\r\n    });\r\n\r\n    this.polygonPromise.resolve(this.polygon);\r\n  }\r\n\r\n  getPolygon() {\r\n    return this.polygonPromise;\r\n  }\r\n\r\n  handleEvent(evt) {\r\n    return e => {\r\n      const evtName = `on${camelize(evt)}`;\r\n      if (this.props[evtName]) {\r\n        this.props[evtName](this.props, this.polygon, e);\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nPolygon.propTypes = {\r\n  paths: PropTypes.array,\r\n  strokeColor: PropTypes.string,\r\n  strokeOpacity: PropTypes.number,\r\n  strokeWeight: PropTypes.number,\r\n  fillColor: PropTypes.string,\r\n  fillOpacity: PropTypes.number\r\n};\r\n\r\nevtNames.forEach(e => (Polygon.propTypes[e] = PropTypes.func));\r\n\r\nPolygon.defaultProps = {\r\n  name: \"Polygon\"\r\n};\r\n\r\nexport default Polygon;\r\n","export const camelize = function(str) {\n  return str.split(' ').map(function(word) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }).join('');\n}\n","import React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\r\nimport Polygon from \"./mapElements/Polygon\";\r\n\r\nclass MapComponent extends Component {\r\n  lastId = 0;\r\n  render() {\r\n    // console.log(\"x\");\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={10}\r\n        style={{ width: \"30%\", height: \"300px\" }}\r\n        initialCenter={{ lat: 35.715298, lng: 51.404343 }}\r\n        onClick={this.clickHandler}\r\n      >\r\n        {this.drawPolygon()}\r\n        {this.props.points.map(x => (\r\n          <Marker\r\n            onClick={this.onMarkerClick}\r\n            name={\"Current location\"}\r\n            position={{ lat: x.lat, lng: x.lng }}\r\n            id={x.pointId}\r\n            key={x.pointId}\r\n          />\r\n        ))}\r\n      </Map>\r\n    );\r\n  }\r\n  clickHandler = (props, marker, e) => {\r\n    // console.log(\"lng\", e.latLng.lng());\r\n    //   console.log(\"lat\", e.latLng.lat());\r\n    let newPoints = [...this.props.points];\r\n    newPoints.push({\r\n      lat: e.latLng.lat(),\r\n      lng: e.latLng.lng(),\r\n      pointId: this.lastId\r\n    });\r\n    this.lastId = this.lastId + 1;\r\n    console.log(\"z\", newPoints);\r\n    this.props.clickHandler(this.props.itemId, newPoints);\r\n  };\r\n  onMarkerClick = evt => {\r\n    const pos = evt.position;\r\n    const index = this.props.points.findIndex(x => {\r\n      return x.pointId === evt.id;\r\n    });\r\n    let newPoints = [...this.props.points];\r\n    newPoints.splice(index, 1);\r\n    this.props.clickHandler(this.props.itemId, newPoints);\r\n  };\r\n  drawPolygon = () => {\r\n    if (this.props.points.length >= 3) {\r\n      return (\r\n        <Polygon\r\n          paths={this.props.points}\r\n          strokeColor=\"#0000FF\"\r\n          strokeOpacity={0.8}\r\n          strokeWeight={2}\r\n          fillColor=\"#0000FF\"\r\n          fillOpacity={0.35}\r\n        />\r\n      );\r\n    }\r\n  };\r\n}\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDjs0u02-62FMwrtxMxci5pc6PIubSyW28\"\r\n})(MapComponent);\r\n","import React, { Component } from \"react\";\n\nimport appService from \"../../services/appService\";\nimport {\n  Button,\n  Input,\n  InputNumber,\n  DatePicker,\n  Select,\n  notification\n} from \"antd\";\nimport MapComponent from \"../reuseable/mapComponent\";\nconst { Option } = Select;\nclass ShowSpeceficForm extends Component {\n  firstTimeForSetState = true;\n  state = {\n    form: {},\n    ElementValues: []\n  };\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    const service = new appService();\n    service\n      .getSpeceficFormById(id)\n      .then(res => this.setState({ form: res.data.form }));\n\n    // .then(res => console.log(res.data.form));\n  }\n  componentDidUpdate() {\n    if (this.state.form.fields && this.firstTimeForSetState) {\n      this.intialStateBuilder();\n      this.firstTimeForSetState = false;\n    }\n  }\n\n  render() {\n    console.log(this.state.ElementValues);\n    return (\n      <div\n        style={{\n          textAlign: this.props.direc === \"rtl\" ? \"right\" : \"left\"\n        }}\n      >\n        <h3 style={{ color: \"white\", marginRight: \"20px\", marginLeft: \"20px\" }}>\n          {this.props.direc === \"rtl\"\n            ? \"مشاهده و پر کردن فرم\"\n            : \"Show And Fill\"}\n        </h3>\n        <div\n          style={{\n            backgroundColor: \"white\",\n            margin: \"20px\",\n            padding: 10\n          }}\n        >\n          <h4>{this.state.form.title}</h4>\n\n          {this.formBuilder()}\n          <Button\n            type=\"primary\"\n            style={{\n              display: \"block\",\n              marginTop: \"20px\",\n              marginBottom: \"10px\"\n            }}\n            onClick={this.submitForm}\n          >\n            {this.props.direc === \"rtl\" ? \"ثبت\" : \"confirm\"}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  formBuilder = () => {\n    let jsxElementArray = [];\n    if (this.state.form.fields) {\n      let fields = [...this.state.form.fields];\n      let ElementValues = [...this.state.ElementValues];\n\n      for (let i = 0; i < fields.length; i++) {\n        const color = fields[i].required === \"true\" ? \"#ffffb3\" : \"white\";\n        if (!fields[i].hasOptions) {\n          switch (fields[i].type) {\n            case \"Text\":\n              jsxElementArray.push(\n                <div style={{ marginTop: \"20px\", display: \"block\" }}>\n                  <label htmlFor={fields[i].name}>\n                    {fields[i].required === \"true\" ? \"*\" : \"\"}\n                    {fields[i].title} :\n                  </label>\n                  <Input\n                    id={fields[i].name}\n                    style={{\n                      width: \"80%\",\n                      marginLeft: \"10px\",\n                      marginRight: \"10px\",\n                      backgroundColor: color\n                    }}\n                    value={ElementValues[i]}\n                    itemId={i}\n                    key={i}\n                    onChange={this.inputOnChangeHandeler}\n                  ></Input>\n                </div>\n              );\n              break;\n            case \"Number\":\n              jsxElementArray.push(\n                <div style={{ marginTop: \"20px\", display: \"block\" }}>\n                  <label htmlFor={fields[i].name}>\n                    {fields[i].required === \"true\" ? \"*\" : \"\"}\n                    {fields[i].title} :\n                  </label>\n                  <InputNumber\n                    id={fields[i].name}\n                    style={{\n                      width: \"20%\",\n                      marginLeft: \"10px\",\n                      marginRight: \"10px\",\n                      backgroundColor: color\n                    }}\n                    Value={ElementValues[i]}\n                    // defaultValue={0}\n                    itemId={i}\n                    key={i}\n                    onChange={e => this.inputNumberOnChangeHandeler(e, i)}\n                  ></InputNumber>\n                </div>\n              );\n              break;\n            case \"Date\":\n              jsxElementArray.push(\n                <div style={{ marginTop: \"20px\", display: \"block\" }}>\n                  <label htmlFor={fields[i].name}>\n                    {fields[i].required === \"true\" ? \"*\" : \"\"}\n                    {fields[i].title} :\n                  </label>\n                  <DatePicker\n                    id={fields[i].name}\n                    style={{\n                      marginLeft: \"10px\",\n                      marginRight: \"10px\",\n                      backgroundColor: color,\n                      direction: \"ltr\"\n                    }}\n                    Value={ElementValues[i]}\n                    defaultValue={0}\n                    itemId={i}\n                    key={i}\n                    onChange={e => this.DatePickerOnChangeHandeler(e, i)}\n                  ></DatePicker>\n                </div>\n              );\n              break;\n            case \"Location\":\n              jsxElementArray.push(\n                <div\n                  style={{\n                    marginTop: \"20px\",\n                    display: \"block\",\n                    height: \"300px\",\n                    marginBottom: \"40px\"\n                  }}\n                >\n                  <label htmlFor={fields[i].name}>\n                    {fields[i].required === \"true\" ? \"*\" : \"\"}\n                    {fields[i].title} :\n                  </label>\n                  <MapComponent\n                    id={fields[i].name}\n                    defaultValue={0}\n                    itemId={i}\n                    key={i}\n                    points={ElementValues[i]}\n                    clickHandler={this.LocationOnClickHandeler}\n                  ></MapComponent>\n                </div>\n              );\n              break;\n            default:\n              console.log(\"form element not found\");\n          }\n        } else {\n          jsxElementArray.push(\n            <div style={{ marginTop: \"20px\", display: \"block\" }}>\n              <label htmlFor={fields[i].name}>\n                {fields[i].required === \"true\" ? \"*\" : \"\"}\n                {fields[i].title} :\n              </label>\n\n              <Select\n                style={{\n                  marginLeft: \"10px\",\n                  marginRight: \"10px\",\n                  backgroundColor: color,\n                  width: \"300px\",\n                  textAlign: \"center\"\n                }}\n                placeholder={\n                  this.props.direc === \"rtl\"\n                    ? \"گزینه ی مد نظر خودر انتخاب کنید\"\n                    : \"select an option\"\n                }\n                itemId={i}\n                key={i}\n                // defaultValue={this.props.obj.field.type}\n                onChange={e => this.SelectOptionOnChangeHandeler(e, i)}\n              >\n                {fields[i].options.map(x => (\n                  <Option value={x.value}>{x.label}</Option>\n                ))}\n              </Select>\n            </div>\n          );\n        }\n      }\n    } else {\n      return <div></div>;\n    }\n    return jsxElementArray;\n  };\n\n  intialStateBuilder = () => {\n    let ElementValues = [];\n\n    if (this.state.form.fields) {\n      let fields = [...this.state.form.fields];\n\n      ElementValues.length = fields.length;\n\n      for (let i = 0; i < fields.length; i++) {\n        if (!fields[i].hasOptions) {\n          switch (fields[i].type) {\n            case \"Text\":\n              ElementValues[i] = \"\";\n              break;\n            case \"Number\":\n              ElementValues[i] = \"\";\n              break;\n            case \"Date\": //do noting to set it undifin\n              break;\n            case \"Location\": //do noting to set it undifin\n              ElementValues[i] = [];\n              break;\n            default:\n              console.log(\"form element not found\");\n          }\n        } else {\n          //do noting to set it undifind\n        }\n      }\n    }\n    this.setState({ ElementValues: ElementValues });\n  };\n\n  inputOnChangeHandeler = e => {\n    //itemid is also index of ElementValues\n    // console.log(e.target.value);\n\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[e.target.getAttribute(\"itemId\")] = e.target.value; //can also get i directly like others\n    this.setState({ ElementValues: ElementValues });\n  };\n  inputNumberOnChangeHandeler = (e, i) => {\n    // console.log(e);\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[i] = e;\n    this.setState({ ElementValues: ElementValues });\n  };\n  DatePickerOnChangeHandeler = (e, i) => {\n    // console.log(e._d, i);\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[i] = e._d;\n    this.setState({ ElementValues: ElementValues });\n  };\n  LocationOnClickHandeler = (i, newPoints) => {\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[i] = newPoints;\n    this.setState({ ElementValues: ElementValues });\n  };\n  SelectOptionOnChangeHandeler = (e, i) => {\n    let ElementValues = [...this.state.ElementValues];\n    ElementValues[i] = e;\n    this.setState({ ElementValues: ElementValues });\n  };\n  submitForm = () => {\n    const service = new appService();\n    if (this.checker()) {\n      service\n        .postComplitedFormByClient(this.formatOutput(), this.state.form.id)\n        .then(x => {\n          notification.success({\n            message: this.props.direc === \"rtl\" ? \"عملیات انجام شد\" : \"Success\",\n            description:\n              this.props.direc === \"rtl\" ? \"فرم ارسال شد\" : \"ّform is submited\",\n            placement: this.props.direc === \"rtl\" ? \"bottomLeft\" : \"bottomRight\"\n          });\n          this.props.history.push(\"/ShowAllForms\");\n        })\n        .catch(e => {\n          notification.error({\n            message: this.props.direc === \"rtl\" ? \"عملیات انجام نشد\" : \"Faild\",\n            description:\n              this.props.direc === \"rtl\"\n                ? \"مشکل در ارسال  به سرور\"\n                : \"connection to server has problem\",\n            placement:\n              this.props.direc === \"rtl\" ? \"bottomLeft\" : \"bottomRight\",\n            onClick: () => {\n              console.log(\"Notification Clicked!\");\n            }\n          });\n        });\n    } else {\n      notification.error({\n        message: this.props.direc === \"rtl\" ? \"عملیات انجام نشد\" : \"Faild\",\n        description:\n          this.props.direc === \"rtl\"\n            ? \"فیلدهای اجباری پر نشده است\"\n            : \"at least one of mandetory filds is not complited\",\n        placement: this.props.direc === \"rtl\" ? \"bottomLeft\" : \"bottomRight\",\n        onClick: () => {\n          console.log(\"Notification Clicked!\");\n        }\n      });\n    }\n  };\n  formatOutput = () => {\n    let ElementValues = [...this.state.ElementValues];\n    let fields = [...this.state.form.fields];\n    console.log(this.state.form);\n    let res = {\n      title: this.state.form.title,\n      id: this.state.form.id,\n      type: \"formSubmit by client\",\n      fields: []\n    };\n    let tempRes = [];\n\n    for (let i = 0; i < fields.length; i++) {\n      tempRes.push({ elementName: fields[i].name, answer: ElementValues[i] });\n    }\n    res.fields = tempRes;\n    return res;\n  };\n  checker = () => {\n    let ElementValues = [...this.state.ElementValues];\n    let res = true;\n    let fields = [...this.state.form.fields];\n    for (let i = 0; i < fields.length; i++) {\n      if (fields[i].required === \"true\") {\n        if (\n          !ElementValues[i] ||\n          (ElementValues[i] === \"\" &&\n            ElementValues[i] === 0 &&\n            ElementValues[i] === [])\n        ) {\n          res = false;\n          break;\n        }\n      }\n    }\n    return res;\n  };\n}\n\nexport default ShowSpeceficForm;\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/commons/navbar\";\nimport ShowAllForms from \"./components/pages/showAllForms\";\nimport { Row, Col } from \"antd\";\nimport { Route, Switch } from \"react-router-dom\";\nimport FormCreater from \"./components/pages/formCreater\";\nimport ShowSpeceficForm from \"./components/pages/showSpeceficForm\";\n\nclass App extends React.Component {\n  state = {\n    smallSize: false,\n    isNavbarButtonClicked: false,\n    direc: \"rtl\",\n    formCreaterState: {\n      title: \"Form\",\n      Elements: [],\n      lastId: 0\n    }\n  };\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n  }\n\n  resize() {\n    const resizeRes = window.innerWidth <= 780;\n    if (!resizeRes) {\n      this.setState({ isNavbarButtonClicked: false });\n    }\n    this.setState({ smallSize: resizeRes });\n  }\n  render() {\n    const { smallSize } = this.state;\n\n    if (smallSize) {\n      return (\n        <div style={{ direction: this.state.direc }}>{this.BigView()}</div>\n      );\n    } else {\n      return (\n        <div style={{ direction: this.state.direc }}>{this.smallView()}</div>\n      );\n    }\n  }\n\n  smallView = () => {\n    const { direc } = this.state;\n    if (direc === \"rtl\") {\n      return (\n        <div className=\"App\">\n          <Row>\n            <Col span={this.state.isNavbarButtonClicked ? 22 : 20}>\n              <div style={{ margin: \"20px\" }}>\n                {/* <ShowAllForms></ShowAllForms> */}\n                <Switch>\n                  <Route\n                    path=\"/FormCreater\"\n                    render={props => (\n                      <FormCreater\n                        direc={this.state.direc}\n                        st={this.state.formCreaterState}\n                        stateFixerFunc={this.formCreaterStateFixHandeler}\n                        {...props}\n                      />\n                    )}\n                  />\n                  <Route\n                    path=\"/ShowAllForms\"\n                    render={props => (\n                      <ShowAllForms direc={this.state.direc} {...props} />\n                    )}\n                  />\n                  <Route\n                    path=\"/ShowSpeceficForm/:id\"\n                    render={props => (\n                      <ShowSpeceficForm direc={this.state.direc} {...props} />\n                    )}\n                  />\n                  <Route\n                    path=\"/\"\n                    render={props => (\n                      <ShowAllForms direc={this.state.direc} {...props} />\n                    )}\n                  />\n                </Switch>\n              </div>\n            </Col>\n            <Col span={this.state.isNavbarButtonClicked ? 2 : 4}>\n              <NavBar\n                smallSize=\"false\"\n                direc={this.state.direc}\n                onDirectChange={this.directHandler}\n                isNavbarButtonClicked={this.navbarButtonResizeViewClickHandler}\n              ></NavBar>\n            </Col>\n          </Row>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <Row>\n            <Col span={this.state.isNavbarButtonClicked ? 2 : 4}>\n              <NavBar\n                smallSize=\"false\"\n                direc={this.state.direc}\n                onDirectChange={this.directHandler}\n                isNavbarButtonClicked={this.navbarButtonResizeViewClickHandler}\n              ></NavBar>\n            </Col>\n            <Col span={this.state.isNavbarButtonClicked ? 22 : 20}>\n              <div style={{ margin: \"20px\" }}>\n                {/* <ShowAllForms></ShowAllForms> */}\n                <Switch>\n                  <Route\n                    path=\"/FormCreater\"\n                    render={props => (\n                      <FormCreater\n                        direc={this.state.direc}\n                        st={this.state.formCreaterState}\n                        stateFixerFunc={this.formCreaterStateFixHandeler}\n                        {...props}\n                      />\n                    )}\n                  />\n                  <Route\n                    path=\"/ShowAllForms\"\n                    render={props => (\n                      <ShowAllForms direc={this.state.direc} {...props} />\n                    )}\n                  />\n                  <Route\n                    path=\"/ShowSpeceficForm/:id\"\n                    render={props => (\n                      <ShowSpeceficForm direc={this.state.direc} {...props} />\n                    )}\n                  />\n                  <Route\n                    path=\"/\"\n                    render={props => (\n                      <ShowAllForms direc={this.state.direc} {...props} />\n                    )}\n                  />\n                </Switch>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      );\n    }\n  };\n  BigView = () => {\n    return (\n      <div className=\"App\">\n        <Col>\n          <Row style={{ zIndex: \"1\" }}>\n            <NavBar\n              smallSize=\"true\"\n              direc={this.state.direc}\n              onDirectChange={this.directHandler}\n            ></NavBar>\n          </Row>\n          <Row style={{ zIndex: \"0\" }}>\n            {/* <ShowAllForms></ShowAllForms> */}\n            <Switch>\n              <Route\n                path=\"/FormCreater\"\n                render={props => (\n                  <FormCreater\n                    direc={this.state.direc}\n                    st={this.state.formCreaterState}\n                    stateFixerFunc={this.formCreaterStateFixHandeler}\n                    {...props}\n                  />\n                )}\n              />\n              <Route\n                path=\"/ShowAllForms\"\n                render={props => (\n                  <ShowAllForms direc={this.state.direc} {...props} />\n                )}\n              />\n              <Route\n                path=\"/ShowSpeceficForm/:id\"\n                render={props => (\n                  <ShowSpeceficForm direc={this.state.direc} {...props} />\n                )}\n              />\n              <Route\n                path=\"/\"\n                render={props => (\n                  <ShowAllForms direc={this.state.direc} {...props} />\n                )}\n              />\n            </Switch>\n          </Row>\n        </Col>\n      </div>\n    );\n  };\n\n  navbarButtonResizeViewClickHandler = () => {\n    this.setState({ isNavbarButtonClicked: !this.state.isNavbarButtonClicked });\n  };\n  directHandler = () => {\n    const res = this.state.direc === \"rtl\" ? \"ltr\" : \"rtl\";\n    this.setState({ isNavbarButtonClicked: false });\n    this.setState({ direc: res });\n  };\n  formCreaterStateFixHandeler = st => {\n    // console.log(st);\n    this.setState({ formCreaterState: st });\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}